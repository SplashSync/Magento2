################################################################################
#
#  This file is part of SplashSync Project.
#
#  Copyright (C) Splash Sync <www.splashsync.com>
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  For the full copyright and license information, please view the LICENSE
#  file that was distributed with this source code.
#
#  @author Bernard Paquier <contact@splashsync.com>
#
################################################################################

################################################################
# Set any variables we need
variables:
  MYSQL_HOST:               mysql
  MYSQL_ROOT_PASSWORD:      myrootpassword
  MYSQL_USER:               magento
  MYSQL_PASSWORD:           magento
  MYSQL_DATABASE:           magento
  ELASTICSEARCH_HOST:       elasticsearch
  ELASTICSEARCH_PORT:       9200
  MAGENTO_LANGUAGE:         en_US
  MAGENTO_TIMEZONE:         Europe/Paris
  MAGENTO_DEFAULT_CURRENCY: EUR
  MAGENTO_URL:              http://localhost
  MAGENTO_BACKEND_FRONTNAME:  admin
  MAGENTO_USE_SECURE:       0
  MAGENTO_BASE_URL_SECURE:  0
  MAGENTO_USE_SECURE_ADMIN: 0
  MAGENTO_ADMIN_FIRSTNAME:  Admin
  MAGENTO_ADMIN_LASTNAME:   MyStore
  MAGENTO_ADMIN_EMAIL:      admin@example.com
  MAGENTO_ADMIN_USERNAME:   admin
  MAGENTO_ADMIN_PASSWORD:   magento2admin
  COMPOSER_MEMORY_LIMIT:    -1

################################################################
# Defined Pipeline Stages
stages:
  - docker
  - Mage-2.4
  - deploy

################################################################
# Functional Tests
################################################################

core_tests:
    image:      registry.gitlab.com/splashsync/magento2:2.4-php7.4
    stage:      Mage-2.4
    retry:      2
    tags:
      - Dedicated
    services:
      - name: mysql:5.7
      - name: elasticsearch:7.5.1
        alias: elasticsearch
        command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
    artifacts:
        when: always
        reports:
            junit: "$CI_PROJECT_DIR/*-report.xml"
    ################################################################################
    # Install & Configure Environment
    before_script:
        ################################################################################
        - echo "\033[32m BEFORE --> Install Magento 2          \033[0m"
        - install-magento.sh          # First Time => INSTALL MAGENTO
        ################################################################################
        - echo "\033[32m BEFORE --> Setup Magento 2            \033[0m"
        - setup-magento.sh            # Configure Magento
        - compile-magento.sh          # Compile Magento
    ################################################################################
    # Run Test Script
    script:
        - cd /var/www/html
        - php bin/magento config:show
        - cp vendor/splash/magento2/phpunit.xml.dist ./phpunit.xml.dist
        ################################################################################
        - echo "\033[32m UNIT TESTS --> Init & Local             \033[0m"
        - php /usr/bin/phpunit --testsuite=Local --log-junit $CI_PROJECT_DIR/local-report.xml
        ################################################################################
        - echo "\033[32m UNIT TESTS --> Full                     \033[0m"
        - php /usr/bin/phpunit --testsuite=Core --log-junit $CI_PROJECT_DIR/main-report.xml


################################################################
# Quality Tests
################################################################

quality_tests:
    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-7.4
    stage:      Mage-2.4
    tags:
        - Dedicated
    services:
        - name: mysql:5.7
    ################################################################################
    # Run Test Script
    script:
        ################################################################################
        - echo "\033[32m QUALITY TESTS --> Compile        \033[0m"
        - composer config --global home
        - echo $HOME/.composer
        - cp ./docker/magento/conf/auth.json /root/.config/composer
        - composer update  --no-scripts --no-plugins
        ################################################################################
        - echo "\033[32m QUALITY TESTS --> Grumphp Travis        \033[0m"
        - php vendor/bin/grumphp run
    ################################################################################
    # Run After Script
    after_script:
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/after.sh | sh


################################################################
# Build Documentation
################################################################
pages:
    image:      registry.gitlab.com/badpixxel-projects/php-sdk:jekyll
    stage:      deploy
    retry:      2
    tags:
        - Dedicated
    ################################################################################
    # Run Test Script
    script:
        # Run Composer to Build Dependencies
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
        # Build Documentation
        - php vendor/bin/grumphp run --tasks=build-docs
    artifacts:
        paths:
            - public

################################################################
# Build Docker Images for Testing
################################################################
docker:
  #    when:       manual
  stage:      docker
  image:      docker:stable
  tags:       ['Dedicated-Docker']
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "Build & Upload Docker Image"
    # Connect Docker to GitLab
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    # Build & Upload Splash All Docker Images
    - docker build -t registry.gitlab.com/splashsync/magento2:2.4-php7.4 -f docker/magento/mage-2.4-php7.4.Dockerfile docker/magento
    - docker push registry.gitlab.com/splashsync/magento2:2.4-php7.4
  only:
      changes:
          - docker/magento/*
          - docker/magento/scripts/*
          - docker/magento/conf/*
  except:
    - schedules
